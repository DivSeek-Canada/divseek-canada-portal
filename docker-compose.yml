version: '2'
services:

  proxy:
    image: nginx:latest
    ports:
        - "8200:80"
    links:
        - apollo
        - galaxy
        - tripal
        - ngadmin
        - chado_jb
        - jbrowse
        - postgrest
        - postgrest_tripal
    volumes:
        - "./nginx/conf:/etc/nginx/conf.d"

  galaxy:
    image: quay.io/erasche/docker-galaxy-annotation
    environment:
        NONUSE: nodejs,proftp,reports
        GALAXY_LOGGING: full
        GALAXY_WEBAPOLLO_URL: "http://apollo:8080/apollo"
        GALAXY_WEBAPOLLO_EXT_URL: "/apollo"
        GALAXY_WEBAPOLLO_PASSWORD: "password"
        GALAXY_WEBAPOLLO_USER: admin@local.host
        GALAXY_SHARED_DIR: /apollo-data

  apollo:
    image: gmod/apollo:latest
    links:
      - "apollo_db:db"
      - "tripal_db"
    environment:
      WEBAPOLLO_DB_USERNAME: postgres
      WEBAPOLLO_DB_PASSWORD: password
      WEBAPOLLO_DB_DRIVER: "org.postgresql.Driver"
      WEBAPOLLO_DB_DIALECT: "org.hibernate.dialect.PostgresPlusDialect"
      WEBAPOLLO_DB_URI: "jdbc:postgresql://db/postgres"
      WEBAPOLLO_CHADO_DB_USERNAME: postgres
      WEBAPOLLO_CHADO_DB_PASSWORD: postgres
      WEBAPOLLO_CHADO_DB_DRIVER: "org.postgresql.Driver"
      WEBAPOLLO_CHADO_DB_DIALECT: "org.hibernate.dialect.PostgresPlusDialect"
      WEBAPOLLO_CHADO_DB_URI: "jdbc:postgresql://tripal_db/postgres"
    volumes_from:
        - "galaxy:ro"

  apollo_db:
    image: postgres:9.4
    environment:
      POSTGRES_PASSWORD: password

  postgrest:
    image: quay.io/erasche/postgrest:latest
    links:
      - "tripal_db:db"
    environment:
      POSTGREST_JWT_SECRET: thisisnotarealsecret
      POSTGREST_SCHEMA: chado
      PG_PASSWORD: postgres
      PG_DB: postgres

  postgrest_tripal:
    image: quay.io/erasche/postgrest:latest
    links:
      - "tripal_db:db"
    environment:
      POSTGREST_JWT_SECRET: thisisnotarealsecret
      POSTGREST_SCHEMA: public
      PG_PASSWORD: postgres
      PG_DB: postgres

  ngadmin:
    image: quay.io/erasche/chado-angular-admin:latest
    links:
      - "postgrest"
      - "postgrest_tripal"
    ports:
      - "8400:80"

  chado_jb:
    image: quay.io/erasche/chado-jbrowse-connector:latest
    environment:
      POSTGRES_PASSWORD: postgres
      SITE_PATH: "http://localhost:8200/jbrowse/"
      JBROWSE: "http://localhost:8200/jbrowse_actual/"
    links:
      - "tripal_db:db"
    ports:
      - "8500:8500"

  tripal_db:
    image: erasche/chado:latest
    environment:
      - POSTGRES_PASSWORD=postgres
        # The default chado image would try to install the schema on first run,
        # we just want the tools to be available.
      - INSTALL_CHADO_SCHEMA=0
    volumes:
      - /var/lib/postgresql/9.4/

  tripal:
    image: quay.io/erasche/tripal:latest
    links:
      - tripal_db:postgres
    volumes:
      - /var/www/html/sites
      - /var/www/private
    environment:
      UPLOAD_LIMIT: 20M
      MEMORY_LIMIT: 128M
      TRIPAL_GIT_CLONE_MODULES: "https://github.com/abretaud/tripal_rest_api.git"
      TRIPAL_ENABLE_MODULES: "tripal_rest_api"
    #ports:
      #- "8080:80"

  jbrowse:
    image: erasche/jbrowse:1.12.0
    ports:
        - "80"
